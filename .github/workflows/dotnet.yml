# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  SEE: ${{ secrets.SECRET }}

jobs:
  job1:
    runs-on: ubuntu-latest
    steps:
      - name: Build
        run: echo 123

  job2:
    runs-on: ubuntu-latest
    steps:
      - name: Build
        run: echo 123

  job3:
    runs-on: ubuntu-latest
    needs: [job1, job2, build]
    steps:
      - name: Build
        run: echo ${{ env.SEE }}

  build:
    runs-on: ubuntu-latest
    needs: job1
    defaults:
      run:
        working-directory: .
    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage;Format=opencover" --logger trx  --results-directory ./TestResults

    # - name: Install ReportGenerator
    #   run: dotnet tool install -g dotnet-reportgenerator-globaltool
        
    # - name: Generate HTML report
    #   run: reportgenerator -reports:"./TestResults/*/coverage.opencover.xml" -targetdir:"./TestResults/CoverageReport" -reporttypes:Html
    
    # - name: List Coverage Report
    #   run: ls -la ./TestResults/CoverageReport

    # - name: Upload coverage report as artifact
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: "Code coverage report"
    #     path: ./Szeminarium/Minta/3. szemi/VerVal/TestResults/CoverageReport